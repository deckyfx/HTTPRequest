apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.deckyfx'
version = versionName

def groupName   = group
def artifactName = 'httprequest'

buildscript {
    ext.autoversion_version = '1.0.4'
    ext.gdgengradle_version = '1.0.8'

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "gradle.plugin.com.github.deckyfx:autoversion:$autoversion_version"
        classpath "gradle.plugin.com.github.deckyfx:gdgengradle:$gdgengradle_version"
    }
}

configurations.all {
    // NOTE: check for updates every time we build
    //resolutionStrategy {
    //   cacheChangingModulesFor 0, 'seconds'
    //}
}

// apply plugin: "com.github.deckyfx.autoversion"
// apply plugin: "com.github.deckyfx.gdgengradle"

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    android {
        lintOptions {
            abortOnError false
        }
    }
}

configurations {
    doc {
        transitive false
    }
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// uncomment to build a jar file in addition to the default aar file
android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task)
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // NOTE: test libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    compileOnly 'com.github.deckyfx:simpleadapter:0.33@aar'
    compileOnly 'com.github.deckyfx:dbhelper:0.8@aar'

    compileOnly 'javax.annotation:javax.annotation-api:1.3.1'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly 'com.squareup.okhttp3:okhttp:3.10.0'
    compileOnly 'com.squareup.okio:okio:1.14.0'

    compileOnly 'com.google.code.gson:gson:2.8.2'
    compileOnly "nl.qbusict:cupboard:2.2.0"
    compileOnly "com.android.support:design:28.0.0"
    compileOnly "com.android.support:appcompat-v7:28.0.0"
    compileOnly "com.android.support:support-v4:28.0.0"
    implementation 'org.jetbrains:annotations-java5:15.0'
}